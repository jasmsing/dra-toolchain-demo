---
default_locale: en
locales:
  $ref: locales.yml
name: "Simple Cloud Foundry toolchain with DevOps Insights"
description: "With this cloud-native toolchain, you can use DevOps Insights to gate the deployment of a simple Cloud Foundry application. By default, the toolchain uses a sample Node.js weather app, or you can link to your own GitHub repository. The toolchain runs unit tests using Mocha, checks code coverage by using Istanbul. \n\nThis toolchain uses tools that are part of the Continuous Delivery service. If an instance of that service isn't already in your organization, when you click **Create**, it is automatically added at no cost to you. For more information and terms, see the [Bluemix catalog](/catalog/services/continuous-delivery/).\n\nTo get started, click **Create**."
version: 0.1
image: data:image/svg+xml;base64,$file(dra-toolchain.svg?localize,base64)
icon: data:image/svg+xml;base64,$file(icon.svg,base64)

toolchain:
  name: "devops-insights-{{timestamp}}"

required:
 - deploy
 - github

# Github repos
demodra-repo:
  service_id: githubpublic
  parameters:
    repo_name: "{{github.parameters.demodra-repo_name}}"
    repo_url: "{{github.parameters.demodra-repo_url}}"
    type: clone
    has_issues: true
  hidden: [form, description]

# Pipelines
demodra-build:
  service_id: pipeline
  parameters:
    name: "{{name}}"
    configuration:
      content: $file(demodra.pipeline.yml)
      env:
        DEMODRA_API_REPO: "demodra-repo"
        CF_APP_NAME: "{{deploy.parameters.demodra-app-name}}"
        STAGING_SPACE_NAME: "{{deploy.parameters.staging-space}}"
        STAGING_ORG_NAME: "{{deploy.parameters.staging-organization}}"
        STAGING_REGION_ID: "{{deploy.parameters.staging-region}}"
        PROD_SPACE_NAME: "{{deploy.parameters.prod-space}}"
        PROD_ORG_NAME: "{{deploy.parameters.prod-organization}}"
        PROD_REGION_ID: "{{deploy.parameters.prod-region}}"
      execute: true
    services: ["demodra-repo"]
  hidden: [form, description]

#DevOps Insights
dra:
  service_id: draservicebroker
  include: dra.yml


#Web IDE
webide:
  service_id: orion

#Deployment
deploy:
  schema:
    $ref: deploy.json
  service-category: pipeline
  parameters:
    staging-space: staging
    prod-space: prod
    demodra-app-name: "{{demodra-repo.parameters.repo_name}}"

#Github
github:
  schema:
    $ref: github.json
  service-category: githubpublic
  parameters:
    demodra-repo_name: "{{name}}"
    demodra-repo_url: https://github.com/jparra5/DemoDRA-1
